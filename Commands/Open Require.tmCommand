<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>beforeRunningCommand</key>
	<string>nop</string>
	<key>command</key>
	<string>#!/usr/bin/env ruby
require 'shellwords'

def require_paths_for_gem(path)
  begin
    if gem_spec = Gem::Specification.find_by_name(path.tr('/', '-'))
      return gem_spec.full_require_paths
    end
  rescue Gem::MissingSpecError =&gt; e
  end

  if path.include?('/')
    require_paths_for_gem(File.dirname(path))
  end
end

if ENV['TM_CURRENT_LINE'] =~ /^\s*(?:require(_relative)?|load)\s*(['"])(.+?)(?:\.rb)?\2(?:\s+|$)?/
  name, file = $3, "#$3.rb"

  if $1 == '_relative'
    search_paths = [ ENV['TM_DIRECTORY'] ]
  elsif paths = require_paths_for_gem(name)
    search_paths = $LOAD_PATH + paths
  else
    search_paths = $LOAD_PATH
  end

  if path = search_paths.map { |path| File.join(path, file) }.find { |path| File.exist?(path) }
    %x{ "$TM_MATE" #{path.shellescape} }
  else
    puts "Unable to locate ‘#{file}’. Locations searched:"
    puts search_paths.map { |path| "• #{path}" }.join("\n")
  end
else
  puts "No require, require_relative, or"
  puts "load statement found in current line."
end
</string>
	<key>fallbackInput</key>
	<string>document</string>
	<key>input</key>
	<string>selection</string>
	<key>inputFormat</key>
	<string>text</string>
	<key>keyEquivalent</key>
	<string>@D</string>
	<key>name</key>
	<string>Open Require</string>
	<key>outputCaret</key>
	<string>afterOutput</string>
	<key>outputFormat</key>
	<string>text</string>
	<key>outputLocation</key>
	<string>toolTip</string>
	<key>scope</key>
	<string>source.ruby</string>
	<key>uuid</key>
	<string>8646378E-91F5-4771-AC7C-43FC49A93576</string>
	<key>version</key>
	<integer>2</integer>
</dict>
</plist>
